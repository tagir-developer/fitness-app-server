# import Exercise from "exercises.graphql"
# import ArticleItemInput from "common.graphql"
# import ArticleItem from "common.graphql"

type DayExercise {
  id: ID!
  name: String!
  exerciseId: String!
  muscleGroups: String!
}

type TrainingDay {
  id: ID!
  name: String!
  exercises: [DayExercise!]!
}

type Program {
  id: ID!
  name: String!
  description: [ArticleItem!]
  isUserProgram: Boolean!
  isUserActiveProgram: Boolean!
  previewImage: String
  descriptionImages: [String!]
  days: [TrainingDay!]!
}

type ProgramWithoutDays {
  id: ID!
  name: String!
  isUserProgram: Boolean!
  isUserActiveProgram: Boolean!
  previewImage: String!
}

input DayExerciseInput {
  id: ID!
  name: String!
  exerciseId: String!
  muscleGroups: String!
}

input TrainingDayInput {
  id: ID!
  name: String!
  exercises: [DayExerciseInput!]!
}

input ProgramInput {
  id: ID!
  name: String!
  description: [ArticleItemInput!]
  isUserProgram: Boolean
  previewImage: String
  descriptionImages: [String!]
  days: [TrainingDayInput!]!
}

type MuscleGroup {
  id: ID!
}

type Query {
  getAllUserPrograms: [ProgramWithoutDays!]!
  getProgramById(programId: String!): Program!
  getMuscleGroups: [MuscleGroup!]!
}

type Mutation {
  createProgram(program: ProgramInput!): ProgramWithoutDays!
  updateProgram(
    programId: String!
    trainingDays: [TrainingDayInput!]!
  ): ProgramWithoutDays!
  copyProgram(programId: String!): ProgramWithoutDays!
  changeProgramName(programId: String!, name: String!): ProgramWithoutDays!
  deleteProgram(programId: String!): String!
  setActiveUserProgram(programId: String!): String!
}
